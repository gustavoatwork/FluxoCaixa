// <auto-generated />
using System;
using FluxoDeCaixa.Infra.Repository.Mysql.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FluxoDeCaixa.Infra.Repository.Mysql.Migrations
{
    [DbContext(typeof(CaixaContext))]
    [Migration("20240618053543_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FluxoDeCaixa.Domain.Models.Caixa.Caixas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Caixas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5c4a3177-785e-44c0-b21b-fc54ddb64976"),
                            Ativo = true,
                            DataCadastro = new DateTime(2024, 6, 18, 2, 35, 43, 516, DateTimeKind.Local).AddTicks(6365),
                            Nome = "Caixa1",
                            Saldo = 0m
                        });
                });

            modelBuilder.Entity("FluxoDeCaixa.Domain.Models.Lancamentos.TipoLancamento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.HasKey("Id");

                    b.ToTable("TipoLancamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            DataCadastro = new DateTime(2024, 6, 18, 2, 35, 43, 516, DateTimeKind.Local).AddTicks(6456),
                            Descricao = "Crédito"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            DataCadastro = new DateTime(2024, 6, 18, 2, 35, 43, 516, DateTimeKind.Local).AddTicks(6458),
                            Descricao = "Débito"
                        });
                });

            modelBuilder.Entity("FluxoDeCaixa.Domain.Models.Lancamentos.Transacoes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CaixaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("TipoLancamentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("TipoLancamentoId");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("FluxoDeCaixa.Domain.Models.Lancamentos.Transacoes", b =>
                {
                    b.HasOne("FluxoDeCaixa.Domain.Models.Caixa.Caixas", "Caixas")
                        .WithMany()
                        .HasForeignKey("CaixaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluxoDeCaixa.Domain.Models.Lancamentos.TipoLancamento", "TipoLancamento")
                        .WithMany()
                        .HasForeignKey("TipoLancamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caixas");

                    b.Navigation("TipoLancamento");
                });
#pragma warning restore 612, 618
        }
    }
}
